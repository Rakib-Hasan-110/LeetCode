class Solution {
public:
    int numDistinct(string s, string t) {
         int m = s.size(), n = t.size();
        vector<long> dp(n + 1, 0);
        dp[0] = 1;  // Empty `t` is a subsequence of any `s`

        for (int i = 1; i <= m; i++) {
            for (int j = n; j >= 1; j--) { // Reverse order to prevent overwriting
                if (s[i-1] == t[j-1])
                    dp[j] += dp[j-1];
            }
        }
        return dp[n];
    }
};

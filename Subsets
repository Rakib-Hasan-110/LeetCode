class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
    vector<vector<int>> result;
        vector<int> currentSubset;
        backtrack(0, nums, currentSubset, result);
        return result;
    }

private:
    void backtrack(int index, vector<int>& nums, vector<int>& currentSubset, vector<vector<int>>& result) {
        result.push_back(currentSubset); // Store the current subset

        for (int i = index; i < nums.size(); i++) {
            currentSubset.push_back(nums[i]);  // Include nums[i]
            backtrack(i + 1, nums, currentSubset, result);  // Recur for next elements
            currentSubset.pop_back();  // Undo choice (Backtrack)
        }
    }
};
